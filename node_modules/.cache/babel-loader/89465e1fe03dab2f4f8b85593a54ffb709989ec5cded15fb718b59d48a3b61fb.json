{"ast":null,"code":"import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing, editingStateInitializer } from '../hooks/features/editing/useGridEditing';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { rowSelectionStateInitializer, useGridRowSelection } from '../hooks/features/rowSelection/useGridRowSelection';\nimport { useGridRowSelectionPreProcessors } from '../hooks/features/rowSelection/useGridRowSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from '../hooks/features/columnGrouping/useGridColumnGrouping';\nimport { useGridVirtualization, virtualizationStateInitializer } from '../hooks/features/virtualization';\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef, props);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  return apiRef;\n};","map":{"version":3,"names":["useGridInitialization","useGridInitializeState","useGridClipboard","columnMenuStateInitializer","useGridColumnMenu","useGridColumns","columnsStateInitializer","densityStateInitializer","useGridDensity","useGridCsvExport","useGridPrintExport","useGridFilter","filterStateInitializer","focusStateInitializer","useGridFocus","useGridKeyboardNavigation","useGridPagination","paginationStateInitializer","useGridPreferencesPanel","preferencePanelStateInitializer","useGridEditing","editingStateInitializer","useGridRows","rowsStateInitializer","useGridRowsPreProcessors","useGridParamsApi","rowSelectionStateInitializer","useGridRowSelection","useGridRowSelectionPreProcessors","useGridSorting","sortingStateInitializer","useGridScroll","useGridEvents","useGridDimensions","rowsMetaStateInitializer","useGridRowsMeta","useGridStatePersistence","useGridColumnSpanning","useGridColumnGrouping","columnGroupsStateInitializer","useGridVirtualization","virtualizationStateInitializer","useDataGridComponent","inputApiRef","props","apiRef"],"sources":["C:/Users/Games/Desktop/Homework/vendia_project/node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js"],"sourcesContent":["import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing, editingStateInitializer } from '../hooks/features/editing/useGridEditing';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { rowSelectionStateInitializer, useGridRowSelection } from '../hooks/features/rowSelection/useGridRowSelection';\nimport { useGridRowSelectionPreProcessors } from '../hooks/features/rowSelection/useGridRowSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from '../hooks/features/columnGrouping/useGridColumnGrouping';\nimport { useGridVirtualization, virtualizationStateInitializer } from '../hooks/features/virtualization';\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef, props);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  return apiRef;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}