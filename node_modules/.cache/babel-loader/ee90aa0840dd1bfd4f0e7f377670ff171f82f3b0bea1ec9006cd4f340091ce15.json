{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Games\\\\Desktop\\\\Homework\\\\vendia_project\\\\src\\\\DevicePage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { vendiaClient } from \"./VendiaClient\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  client\n} = vendiaClient();\nexport const DevicePage = () => {\n  _s();\n  const [testList, setTestList] = useState();\n  const filteredTestList = client.entities.test.list({\n    filter: {\n      Device: {\n        contains: 'Device1'\n      }\n    }\n  });\n  setTestList(filteredTestList === null || filteredTestList === void 0 ? void 0 : filteredTestList.items);\n  console.log(testList);\n  const boolToString = value => {\n    if (typeof value === 'boolean') return 'true';else return 'false';\n  };\n  const columns = [{\n    field: 'id',\n    headerName: 'TestID',\n    width: 90\n  }, {\n    field: 'OrgAssignment',\n    headerName: 'OrgAssignment',\n    width: 150\n  }, {\n    field: 'TestName',\n    headerName: 'TestName',\n    width: 90\n  }, {\n    field: 'TestMethod',\n    headerName: 'TestMethod',\n    width: 90\n  }, {\n    field: 'Notes',\n    headerName: 'Notes',\n    width: 90\n  }, {\n    field: 'Completed',\n    headerName: 'Completed',\n    width: 90\n  }, {\n    field: 'UpdatedBy',\n    headerName: 'UpdatedBy',\n    width: 90\n  }];\n\n  /*\r\n  const rows = testList?.map((test) => ({\r\n      id: test?.TestID,\r\n      OrgAssignment: test?.OrgAssignment,\r\n      TestName: test?.TestName,\r\n      TestMethod: test?.TestMethod,\r\n      Notes: test?.Notes,\r\n      Completed: boolToString(test?.Completed),\r\n      UpdatedBy: test?.UpdatedBy\r\n      \r\n  }));\r\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DevicePage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Device1 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(DevicePage, \"mvky1XJKGjZrnuvT/yYEDV7yD0k=\");\n_c = DevicePage;\nvar _c;\n$RefreshReg$(_c, \"DevicePage\");","map":{"version":3,"names":["React","useEffect","useState","vendiaClient","DataGrid","jsxDEV","_jsxDEV","client","DevicePage","_s","testList","setTestList","filteredTestList","entities","test","list","filter","Device","contains","items","console","log","boolToString","value","columns","field","headerName","width","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Games/Desktop/Homework/vendia_project/src/DevicePage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { vendiaClient } from \"./VendiaClient\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nconst { client } = vendiaClient();\r\n\r\n\r\nexport const DevicePage = () => {\r\n\r\n    const[testList, setTestList] = useState();\r\n\r\n    const filteredTestList = client.entities.test.list({\r\n        filter: {\r\n          Device: {\r\n            contains: 'Device1',\r\n          }\r\n        },\r\n      })\r\n\r\n      setTestList(filteredTestList?.items);\r\n\r\n    \r\n    console.log(testList);\r\n\r\n    const boolToString = (value) =>\r\n    {\r\n        if(typeof(value) === 'boolean')\r\n            return 'true';\r\n        else\r\n            return 'false'\r\n    }\r\n    \r\n    const columns = [\r\n        {field: 'id', headerName: 'TestID', width: 90},\r\n        {field: 'OrgAssignment', headerName: 'OrgAssignment', width: 150},\r\n        {field: 'TestName', headerName: 'TestName', width: 90},\r\n        {field: 'TestMethod', headerName: 'TestMethod', width: 90},\r\n        {field: 'Notes', headerName: 'Notes', width: 90},\r\n        {field: 'Completed', headerName: 'Completed', width: 90},\r\n        {field: 'UpdatedBy', headerName: 'UpdatedBy', width: 90},\r\n    ];\r\n\r\n    \r\n    /*\r\n    const rows = testList?.map((test) => ({\r\n        id: test?.TestID,\r\n        OrgAssignment: test?.OrgAssignment,\r\n        TestName: test?.TestName,\r\n        TestMethod: test?.TestMethod,\r\n        Notes: test?.Notes,\r\n        Completed: boolToString(test?.Completed),\r\n        UpdatedBy: test?.UpdatedBy\r\n        \r\n    }));\r\n    */\r\n    return(\r\n        \r\n        <div className=\"DevicePage\">\r\n            <h1> Device1 </h1>\r\n            <div>\r\n\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAM;EAAEC;AAAO,CAAC,GAAGJ,YAAY,CAAC,CAAC;AAGjC,OAAO,MAAMK,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE5B,MAAK,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAEzC,MAAMU,gBAAgB,GAAGL,MAAM,CAACM,QAAQ,CAACC,IAAI,CAACC,IAAI,CAAC;IAC/CC,MAAM,EAAE;MACNC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ;IACF;EACF,CAAC,CAAC;EAEFP,WAAW,CAACC,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEO,KAAK,CAAC;EAGtCC,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC;EAErB,MAAMY,YAAY,GAAIC,KAAK,IAC3B;IACI,IAAG,OAAOA,KAAM,KAAK,SAAS,EAC1B,OAAO,MAAM,CAAC,KAEd,OAAO,OAAO;EACtB,CAAC;EAED,MAAMC,OAAO,GAAG,CACZ;IAACC,KAAK,EAAE,IAAI;IAAEC,UAAU,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC9C;IAACF,KAAK,EAAE,eAAe;IAAEC,UAAU,EAAE,eAAe;IAAEC,KAAK,EAAE;EAAG,CAAC,EACjE;IAACF,KAAK,EAAE,UAAU;IAAEC,UAAU,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAE,CAAC,EACtD;IAACF,KAAK,EAAE,YAAY;IAAEC,UAAU,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1D;IAACF,KAAK,EAAE,OAAO;IAAEC,UAAU,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAE,CAAC,EAChD;IAACF,KAAK,EAAE,WAAW;IAAEC,UAAU,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAE,CAAC,EACxD;IAACF,KAAK,EAAE,WAAW;IAAEC,UAAU,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAE,CAAC,CAC3D;;EAGD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,oBAEIrB,OAAA;IAAKsB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBvB,OAAA;MAAAuB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB3B,OAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGL,CAAC;AAGd,CAAC;AAAAxB,EAAA,CA5DYD,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}