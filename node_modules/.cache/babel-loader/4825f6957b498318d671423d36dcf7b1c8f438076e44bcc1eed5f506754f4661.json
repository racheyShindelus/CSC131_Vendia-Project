{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Games\\\\Desktop\\\\Homework\\\\vendia_project\\\\src\\\\Demo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n// import { vendiaClient } from \"./vendiaClient\";\nimport DeviceForm from './AddTest';\nimport AddTest from './AddTest';\nimport AddDevice from './AddDevice';\nimport './App.css';\n\n// const { client } = vendiaClient();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Demo = () => {\n  _s();\n  const [showForm, setShowForm] = useState(false); // Declare these outside useEffect\n\n  const toggleForm = () => {\n    setShowForm(!showForm);\n  };\n  useEffect(() => {\n    const listDevices = async () => {\n      // const listDevicesResponse = await client.entities.test.list();\n      // console.log(listDevicesResponse);\n    };\n    listDevices();\n  }, []); // Dependencies array should be empty since you're only running this once\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <h1>Device Management</h1>\n    //   <button onClick={toggleForm}>Create Device</button> {/* Button to toggle form */}\n    //   {showForm && <DeviceForm />} {/* Conditionally render the form */}\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"home-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"archive\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-devices-page\",\n          children: [/*#__PURE__*/_jsxDEV(AddTest, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddDevice, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Demo, \"t9KnDe1cOG15OGhNaHzD/6p/mPI=\");\n_c = Demo;\nexport default Demo;\n\n// import React from \"react\";\n// import { useEffect, useState } from \"react\";\n// import { vendiaClient } from \"./VendiaClient\";\n// import './App.css'\n\n// const { client }  = vendiaClient();\n\n// export const Demo = () => {\n\n//     const[device, setDevice] = useState();\n//     const[testName, setTestName] = useState();\n//     const[testList, setTestList] = useState();\n\n//     const[deviceName, setDeviceList] = useState();\n\n//     useEffect(() => {\n//         // const listTest = async () => {\n//         //     const listTestResponse = await client.entities.test.list();\n//         //     console.log(listTestResponse?.items);\n//         //     setTestList(listTestResponse?.items);\n//         // }\n//         // listTest();\n//         const listDevices = async () => {\n//             const listDevicesResponse = await client.entities.devices.list();\n//             setDeviceList(listDevicesResponse?.items);\n//         }\n//         listDevices();\n//     }, [])\n\n//     const addDevice = async () => {\n//         const addDeviceResponse = await client.entities.test.add({\n//             Device: device,\n//             TestName: testName\n//         })\n//         console.log(addDeviceResponse);\n//         // const response = await client.entities.devices.list();\n//         // console.log(response);\n//     }\n\n//     const handleDeviceChange = (event) => {\n//         setDevice(event.target.value);\n//     }\n\n//     const handleTestNameChange = (event) => {\n//         setTestName(event.target.value);\n//     }\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n//         addDevice();\n//     }\n\n//     // <button onClick={() => {addDevice()}}>Add Device</button>\n//     return (\n//         <div>\n//             CSUS Fall 2023\n//             <div>  \n//                <form onSubmit={handleSubmit}>   \n//                     <div>   \n//                         <input\n//                         type=\"text\"\n//                         name=\"Device\"\n//                         value={device}\n//                         onChange={handleDeviceChange}\n//                         />\n//                     </div>\n//                     <div>   \n//                     <input\n//                         type=\"text\"\n//                         name=\"TestName\"\n//                         value={testName}\n//                         onChange={handleTestNameChange}\n//                         />\n//                     </div>\n//                     <input type=\"submit\" />\n//                </form>\n//                <div>\n//                     {/* {testList?.map((item, index) => ( */}\n//                     {deviceName?.map((item, index) => (\n//                         <div key={index}>   \n//                             {/* {item?.Device} */}\n//                             {item?.DeviceName}\n//                         </div>\n//                     )\n//                     )}\n//                </div>\n//             </div>\n//        </div>\n//     )\n// };\nvar _c;\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["React","useState","useEffect","DeviceForm","AddTest","AddDevice","jsxDEV","_jsxDEV","Demo","_s","showForm","setShowForm","toggleForm","listDevices","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Games/Desktop/Homework/vendia_project/src/Demo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n// import { vendiaClient } from \"./vendiaClient\";\r\nimport DeviceForm from './AddTest';\r\nimport AddTest from './AddTest';\r\nimport AddDevice from './AddDevice';\r\nimport './App.css'\r\n\r\n// const { client } = vendiaClient();\r\n\r\nexport const Demo = () => {\r\n  const [showForm, setShowForm] = useState(false); // Declare these outside useEffect\r\n\r\n  const toggleForm = () => {\r\n    setShowForm(!showForm);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const listDevices = async () => {\r\n      // const listDevicesResponse = await client.entities.test.list();\r\n      // console.log(listDevicesResponse);\r\n    };\r\n\r\n    listDevices();\r\n  }, []); // Dependencies array should be empty since you're only running this once\r\n\r\n  return (\r\n    // <div>\r\n    //   <h1>Device Management</h1>\r\n    //   <button onClick={toggleForm}>Create Device</button> {/* Button to toggle form */}\r\n    //   {showForm && <DeviceForm />} {/* Conditionally render the form */}\r\n    // </div>\r\n    <div className=\"home-container\">\r\n    <div className=\"archive\">\r\n        {/* <caption>React App</caption> */}\r\n        <div className=\"add-devices-page\">\r\n            <AddTest />\r\n            <AddDevice />\r\n        </div>\r\n\r\n        {/* <div>\r\n            <button onClick={handleShowTestForm}>Show Test Form</button>\r\n            <button onClick={handleShowDeviceForm}>Show Device Form</button>\r\n        </div>\r\n        {showTestForm && <AddTest />}\r\n        {showDeviceForm && <AddDevice />} */}\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import { useEffect, useState } from \"react\";\r\n// import { vendiaClient } from \"./VendiaClient\";\r\n// import './App.css'\r\n\r\n// const { client }  = vendiaClient();\r\n\r\n// export const Demo = () => {\r\n\r\n//     const[device, setDevice] = useState();\r\n//     const[testName, setTestName] = useState();\r\n//     const[testList, setTestList] = useState();\r\n\r\n//     const[deviceName, setDeviceList] = useState();\r\n\r\n//     useEffect(() => {\r\n//         // const listTest = async () => {\r\n//         //     const listTestResponse = await client.entities.test.list();\r\n//         //     console.log(listTestResponse?.items);\r\n//         //     setTestList(listTestResponse?.items);\r\n//         // }\r\n//         // listTest();\r\n//         const listDevices = async () => {\r\n//             const listDevicesResponse = await client.entities.devices.list();\r\n//             setDeviceList(listDevicesResponse?.items);\r\n//         }\r\n//         listDevices();\r\n//     }, [])\r\n\r\n//     const addDevice = async () => {\r\n//         const addDeviceResponse = await client.entities.test.add({\r\n//             Device: device,\r\n//             TestName: testName\r\n//         })\r\n//         console.log(addDeviceResponse);\r\n//         // const response = await client.entities.devices.list();\r\n//         // console.log(response);\r\n//     }\r\n\r\n//     const handleDeviceChange = (event) => {\r\n//         setDevice(event.target.value);\r\n//     }\r\n\r\n//     const handleTestNameChange = (event) => {\r\n//         setTestName(event.target.value);\r\n//     }\r\n\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n//         addDevice();\r\n//     }\r\n\r\n//     // <button onClick={() => {addDevice()}}>Add Device</button>\r\n//     return (\r\n//         <div>\r\n//             CSUS Fall 2023\r\n//             <div>  \r\n//                <form onSubmit={handleSubmit}>   \r\n//                     <div>   \r\n//                         <input\r\n//                         type=\"text\"\r\n//                         name=\"Device\"\r\n//                         value={device}\r\n//                         onChange={handleDeviceChange}\r\n//                         />\r\n//                     </div>\r\n//                     <div>   \r\n//                     <input\r\n//                         type=\"text\"\r\n//                         name=\"TestName\"\r\n//                         value={testName}\r\n//                         onChange={handleTestNameChange}\r\n//                         />\r\n//                     </div>\r\n//                     <input type=\"submit\" />\r\n//                </form>\r\n//                <div>\r\n//                     {/* {testList?.map((item, index) => ( */}\r\n//                     {deviceName?.map((item, index) => (\r\n//                         <div key={index}>   \r\n//                             {/* {item?.Device} */}\r\n//                             {item?.DeviceName}\r\n//                         </div>\r\n//                     )\r\n//                     )}\r\n//                </div>\r\n//             </div>\r\n//        </div>\r\n//     )\r\n// };\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA,OAAOC,UAAU,MAAM,WAAW;AAClC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjD,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACvBD,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAEDR,SAAS,CAAC,MAAM;IACd,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B;MACA;IAAA,CACD;IAEDA,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;IAAA;IACE;IACA;IACA;IACA;IACA;IACAN,OAAA;MAAKO,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC/BR,OAAA;QAAKO,SAAS,EAAC,SAAS;QAAAC,QAAA,eAEpBR,OAAA;UAAKO,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC7BR,OAAA,CAACH,OAAO;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACXZ,OAAA,CAACF,SAAS;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;AAEV,CAAC;AAACV,EAAA,CAvCWD,IAAI;AAAAY,EAAA,GAAJZ,IAAI;AAyCjB,eAAeA,IAAI;;AAOnB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}