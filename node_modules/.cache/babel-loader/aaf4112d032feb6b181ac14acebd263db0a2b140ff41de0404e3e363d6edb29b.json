{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Games\\\\Desktop\\\\Homework\\\\vendia_project\\\\src\\\\DevicePage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { vendiaClient } from \"./VendiaClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  client\n} = vendiaClient();\nexport const DevicePage = () => {\n  _s();\n  const [filteredTestList, setFilteredTestList] = useState();\n  useEffect(() => {\n    const filterTestList = async () => {\n      const testList = await client.entities.test.list();\n      //console.log(testList?.items);\n      setFilteredTestList(testList);\n    };\n    filterTestList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DevicePage\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" TestID \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" OrgAssignment \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" TestName \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" TestMethod \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" Notes \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" Completed \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \" UpdatedBy \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredTestList === null || filteredTestList === void 0 ? void 0 : filteredTestList.map(test => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", test.TestID, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", test.OrgAssignment, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", test.TestName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", test.TestMethod, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", test.Notes, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", test.Completed, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", test.UpdatedBy, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(DevicePage, \"RMTvc0Ht7p3UUqpIVXsW8G5EoCE=\");\n_c = DevicePage;\nvar _c;\n$RefreshReg$(_c, \"DevicePage\");","map":{"version":3,"names":["React","useEffect","useState","vendiaClient","jsxDEV","_jsxDEV","client","DevicePage","_s","filteredTestList","setFilteredTestList","filterTestList","testList","entities","test","list","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","TestID","OrgAssignment","TestName","TestMethod","Notes","Completed","UpdatedBy","_c","$RefreshReg$"],"sources":["C:/Users/Games/Desktop/Homework/vendia_project/src/DevicePage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { vendiaClient } from \"./VendiaClient\";\r\n\r\nconst { client } = vendiaClient();\r\n\r\n\r\nexport const DevicePage = () => {\r\n\r\n    const[filteredTestList, setFilteredTestList] = useState();\r\n\r\n    useEffect(() => {\r\n        const filterTestList = async () => {\r\n            const testList = await client.entities.test.list();\r\n            //console.log(testList?.items);\r\n            setFilteredTestList(testList);\r\n\r\n\r\n        }\r\n        filterTestList();\r\n    }, [])\r\n\r\n\r\n    return(\r\n        \r\n        <div className=\"DevicePage\">\r\n            <table>\r\n\r\n                 <tr>\r\n                    <th> TestID </th>\r\n                    <th> OrgAssignment </th>\r\n                    <th> TestName </th>\r\n                    <th> TestMethod </th>\r\n                    <th> Notes </th>\r\n                    <th> Completed </th>\r\n                    <th> UpdatedBy </th>\r\n                </tr>   \r\n                \r\n                <tbody>\r\n                {filteredTestList?.map((test) => (\r\n                    <tr>\r\n                        <td> {test.TestID} </td>\r\n                        <td> {test.OrgAssignment} </td>\r\n                        <td> {test.TestName}</td>\r\n                        <td> {test.TestMethod} </td>\r\n                        <td> {test.Notes} </td>\r\n                        <td> {test.Completed} </td>\r\n                        <td> {test.UpdatedBy} </td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}