{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Games\\\\Desktop\\\\Homework\\\\vendia_project\\\\src\\\\DeviceListHome.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { vendiaClient } from \"./vendiaClient\";\nimport \"./Archive.css\";\nimport './App.css';\nimport { Link } from 'react-router-dom';\nimport Pagination from '@mui/material/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  client\n} = vendiaClient();\nconst DeviceListHome = deviceProps => {\n  _s();\n  const [deviceName, setDeviceList] = useState();\n  const [page, setPage] = useState(1);\n  const itemsPerPage = 12;\n  const devices = deviceProps.devices;\n  const currentItems = deviceName === null || deviceName === void 0 ? void 0 : deviceName.slice((page - 1) * itemsPerPage, page * itemsPerPage);\n  const addDummyData = true;\n  const numDummyData = 10;\n  useEffect(() => {\n    const listDevices = async () => {\n      const listDevicesResponse = await client.entities.devices.list();\n      if (addDummyData) {\n        const dummyData = Array.from({\n          length: numDummyData\n        }, (_, i) => ({\n          DeviceTitle: `Dummy Device ${i + 1}`,\n          Completion: `${Math.floor(Math.random() * 100)}`,\n          DeviceName: `dummy-device-${i + 1}`\n        }));\n        setDeviceList([...(listDevicesResponse === null || listDevicesResponse === void 0 ? void 0 : listDevicesResponse.items), ...dummyData]);\n      } else {\n        setDeviceList(listDevicesResponse === null || listDevicesResponse === void 0 ? void 0 : listDevicesResponse.items);\n      }\n    };\n    listDevices();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-test-devices-container\",\n    children: [currentItems === null || currentItems === void 0 ? void 0 : currentItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-device1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"#\", index + 1, \": \", item === null || item === void 0 ? void 0 : item.DeviceTitle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", item === null || item === void 0 ? void 0 : item.Completion, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/DevicePage/${item === null || item === void 0 ? void 0 : item.DeviceName}/${item === null || item === void 0 ? void 0 : item.DeviceTitle}`,\n        className: \"home-device1button\",\n        type: \"button\",\n        children: \"View tests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        className: \"pagination\",\n        count: Math.ceil((deviceName === null || deviceName === void 0 ? void 0 : deviceName.length) / itemsPerPage),\n        page: page,\n        onChange: (event, value) => setPage(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(DeviceListHome, \"kRd62cSxOugWpMtpjMuWfj0NhOs=\");\n_c = DeviceListHome;\nexport default DeviceListHome;\n\n// const DeviceListHome = (deviceProps) => {\n//     const handleViewTests = () => {\n//         console.log('View tests button was pressed');\n//     }\n//     const[deviceName, setDeviceList] = useState();\n//     const devices = deviceProps.devices;\n\n//     useEffect(() => {\n//         const listDevices = async () => {\n//             const listDevicesResponse = await client.entities.devices.list();\n//             setDeviceList(listDevicesResponse?.items);\n//         }\n//         listDevices();\n//     }, [])\n\n//     return (\n//         <div className=\"home-test-devices-container\">\n//             {deviceName?.map((item, index) => (\n//             <div className=\"home-device1\" key={index}>\n//                 <h2>#{index+1}: {item?.DeviceTitle}</h2>\n//                 <p>Status: {item?.Completion}%</p>\n//                 {/* <Link to={`/DevicePage/${item?.DeviceName}`} className=\"home-device1button\" type=\"button\">View tests</Link> */}\n//                 <Link to={`/DevicePage/${item?.DeviceName}/${item?.DeviceTitle}`} className=\"home-device1button\" type=\"button\">View tests</Link>\n//             </div>\n//             ))}\n//         </div>\n//     );\n// }\n// export default DeviceListHome;\nvar _c;\n$RefreshReg$(_c, \"DeviceListHome\");","map":{"version":3,"names":["React","useEffect","useState","vendiaClient","Link","Pagination","jsxDEV","_jsxDEV","client","DeviceListHome","deviceProps","_s","deviceName","setDeviceList","page","setPage","itemsPerPage","devices","currentItems","slice","addDummyData","numDummyData","listDevices","listDevicesResponse","entities","list","dummyData","Array","from","length","_","i","DeviceTitle","Completion","Math","floor","random","DeviceName","items","className","children","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber","to","type","count","ceil","onChange","event","value","_c","$RefreshReg$"],"sources":["C:/Users/Games/Desktop/Homework/vendia_project/src/DeviceListHome.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { vendiaClient } from \"./vendiaClient\";\r\nimport \"./Archive.css\";\r\nimport './App.css'\r\nimport { Link } from 'react-router-dom';\r\nimport Pagination from '@mui/material/Pagination';\r\n\r\nconst { client } = vendiaClient();\r\n\r\nconst DeviceListHome = (deviceProps) => {\r\n    const [deviceName, setDeviceList] = useState();\r\n    const [page, setPage] = useState(1);\r\n    const itemsPerPage = 12;\r\n    const devices = deviceProps.devices;\r\n    const currentItems = deviceName?.slice((page - 1) * itemsPerPage, page * itemsPerPage);\r\n\r\n    const addDummyData = true;\r\n    const numDummyData = 10;\r\n\r\n    useEffect(() => {\r\n        const listDevices = async () => {\r\n            const listDevicesResponse = await client.entities.devices.list();\r\n            if (addDummyData) {\r\n                const dummyData = Array.from({length: numDummyData}, (_, i) => ({\r\n                    DeviceTitle: `Dummy Device ${i+1}`,\r\n                    Completion: `${Math.floor(Math.random() * 100)}`,\r\n                    DeviceName: `dummy-device-${i+1}`\r\n                }));\r\n                setDeviceList([...listDevicesResponse?.items, ...dummyData]);\r\n            } else {\r\n                setDeviceList(listDevicesResponse?.items);\r\n            }\r\n        }\r\n        listDevices();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"home-test-devices-container\">\r\n            {currentItems?.map((item, index) => (\r\n            <div className=\"home-device1\" key={index}>\r\n                <h2>#{index+1}: {item?.DeviceTitle}</h2>\r\n                <p>Status: {item?.Completion}%</p>\r\n                <Link to={`/DevicePage/${item?.DeviceName}/${item?.DeviceTitle}`} className=\"home-device1button\" type=\"button\">View tests</Link>\r\n            </div>\r\n            ))}\r\n            <div>\r\n            <Pagination className=\"pagination\" count={Math.ceil(deviceName?.length / itemsPerPage)} page={page} onChange={(event, value) => setPage(value)} />\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default DeviceListHome;\r\n\r\n// const DeviceListHome = (deviceProps) => {\r\n//     const handleViewTests = () => {\r\n//         console.log('View tests button was pressed');\r\n//     }\r\n//     const[deviceName, setDeviceList] = useState();\r\n//     const devices = deviceProps.devices;\r\n\r\n//     useEffect(() => {\r\n//         const listDevices = async () => {\r\n//             const listDevicesResponse = await client.entities.devices.list();\r\n//             setDeviceList(listDevicesResponse?.items);\r\n//         }\r\n//         listDevices();\r\n//     }, [])\r\n\r\n//     return (\r\n//         <div className=\"home-test-devices-container\">\r\n//             {deviceName?.map((item, index) => (\r\n//             <div className=\"home-device1\" key={index}>\r\n//                 <h2>#{index+1}: {item?.DeviceTitle}</h2>\r\n//                 <p>Status: {item?.Completion}%</p>\r\n//                 {/* <Link to={`/DevicePage/${item?.DeviceName}`} className=\"home-device1button\" type=\"button\">View tests</Link> */}\r\n//                 <Link to={`/DevicePage/${item?.DeviceName}/${item?.DeviceTitle}`} className=\"home-device1button\" type=\"button\">View tests</Link>\r\n//             </div>\r\n//             ))}\r\n//         </div>\r\n//     );\r\n// }\r\n// export default DeviceListHome;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}