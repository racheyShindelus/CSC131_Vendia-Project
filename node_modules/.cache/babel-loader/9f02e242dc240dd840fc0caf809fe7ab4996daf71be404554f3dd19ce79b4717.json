{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils';\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nexport const headerFilteringStateInitializer = state => _extends({}, state, {\n  headerFiltering: {\n    editing: null,\n    menuOpen: null\n  }\n});\nexport const useGridHeaderFiltering = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridHeaderFiltering');\n  const setHeaderFilterState = React.useCallback(headerFilterState => {\n    apiRef.current.setState(state => {\n      var _headerFilterState$ed, _headerFilterState$me;\n      // Safety check to avoid MIT users from using it\n      // This hook should ultimately be moved to the Pro package\n      if (props.signature === 'DataGrid') {\n        return state;\n      }\n      return _extends({}, state, {\n        headerFiltering: {\n          editing: (_headerFilterState$ed = headerFilterState.editing) != null ? _headerFilterState$ed : null,\n          menuOpen: (_headerFilterState$me = headerFilterState.menuOpen) != null ? _headerFilterState$me : null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.signature]);\n  const startHeaderFilterEditMode = React.useCallback(field => {\n    logger.debug(`Starting edit mode on header filter for field: ${field}`);\n    apiRef.current.setHeaderFilterState({\n      editing: field\n    });\n  }, [apiRef, logger]);\n  const stopHeaderFilterEditMode = React.useCallback(() => {\n    logger.debug(`Stopping edit mode on header filter`);\n    apiRef.current.setHeaderFilterState({\n      editing: null\n    });\n  }, [apiRef, logger]);\n  const showHeaderFilterMenu = React.useCallback(field => {\n    logger.debug(`Opening header filter menu for field: ${field}`);\n    apiRef.current.setHeaderFilterState({\n      menuOpen: field\n    });\n  }, [apiRef, logger]);\n  const hideHeaderFilterMenu = React.useCallback(() => {\n    logger.debug(`Hiding header filter menu for active field`);\n    let fieldToFocus = apiRef.current.state.headerFiltering.menuOpen;\n    if (fieldToFocus) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setHeaderFilterState({\n        menuOpen: null\n      });\n      apiRef.current.setColumnHeaderFilterFocus(fieldToFocus);\n    }\n  }, [apiRef, logger]);\n  const headerFilterPrivateApi = {\n    setHeaderFilterState\n  };\n  const headerFilterApi = {\n    startHeaderFilterEditMode,\n    stopHeaderFilterEditMode,\n    showHeaderFilterMenu,\n    hideHeaderFilterMenu\n  };\n  useGridApiMethod(apiRef, headerFilterApi, 'public');\n  useGridApiMethod(apiRef, headerFilterPrivateApi, 'private');\n};","map":{"version":3,"names":["_extends","React","useGridApiMethod","useGridLogger","gridColumnLookupSelector","gridColumnVisibilityModelSelector","gridColumnFieldsSelector","headerFilteringStateInitializer","state","headerFiltering","editing","menuOpen","useGridHeaderFiltering","apiRef","props","logger","setHeaderFilterState","useCallback","headerFilterState","current","setState","_headerFilterState$ed","_headerFilterState$me","signature","forceUpdate","startHeaderFilterEditMode","field","debug","stopHeaderFilterEditMode","showHeaderFilterMenu","hideHeaderFilterMenu","fieldToFocus","columnLookup","columnVisibilityModel","orderedFields","visibleOrderedFields","filter","fieldIndex","indexOf","setColumnHeaderFilterFocus","headerFilterPrivateApi","headerFilterApi"],"sources":["C:/Users/Games/Desktop/Homework/vendia_project/node_modules/@mui/x-data-grid/hooks/features/headerFiltering/useGridHeaderFiltering.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils';\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nexport const headerFilteringStateInitializer = state => _extends({}, state, {\n  headerFiltering: {\n    editing: null,\n    menuOpen: null\n  }\n});\nexport const useGridHeaderFiltering = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridHeaderFiltering');\n  const setHeaderFilterState = React.useCallback(headerFilterState => {\n    apiRef.current.setState(state => {\n      var _headerFilterState$ed, _headerFilterState$me;\n      // Safety check to avoid MIT users from using it\n      // This hook should ultimately be moved to the Pro package\n      if (props.signature === 'DataGrid') {\n        return state;\n      }\n      return _extends({}, state, {\n        headerFiltering: {\n          editing: (_headerFilterState$ed = headerFilterState.editing) != null ? _headerFilterState$ed : null,\n          menuOpen: (_headerFilterState$me = headerFilterState.menuOpen) != null ? _headerFilterState$me : null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.signature]);\n  const startHeaderFilterEditMode = React.useCallback(field => {\n    logger.debug(`Starting edit mode on header filter for field: ${field}`);\n    apiRef.current.setHeaderFilterState({\n      editing: field\n    });\n  }, [apiRef, logger]);\n  const stopHeaderFilterEditMode = React.useCallback(() => {\n    logger.debug(`Stopping edit mode on header filter`);\n    apiRef.current.setHeaderFilterState({\n      editing: null\n    });\n  }, [apiRef, logger]);\n  const showHeaderFilterMenu = React.useCallback(field => {\n    logger.debug(`Opening header filter menu for field: ${field}`);\n    apiRef.current.setHeaderFilterState({\n      menuOpen: field\n    });\n  }, [apiRef, logger]);\n  const hideHeaderFilterMenu = React.useCallback(() => {\n    logger.debug(`Hiding header filter menu for active field`);\n    let fieldToFocus = apiRef.current.state.headerFiltering.menuOpen;\n    if (fieldToFocus) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setHeaderFilterState({\n        menuOpen: null\n      });\n      apiRef.current.setColumnHeaderFilterFocus(fieldToFocus);\n    }\n  }, [apiRef, logger]);\n  const headerFilterPrivateApi = {\n    setHeaderFilterState\n  };\n  const headerFilterApi = {\n    startHeaderFilterEditMode,\n    stopHeaderFilterEditMode,\n    showHeaderFilterMenu,\n    hideHeaderFilterMenu\n  };\n  useGridApiMethod(apiRef, headerFilterApi, 'public');\n  useGridApiMethod(apiRef, headerFilterPrivateApi, 'private');\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}