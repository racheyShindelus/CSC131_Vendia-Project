{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Games\\\\Desktop\\\\Homework\\\\vendia_project\\\\src\\\\DevicePage2.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { vendiaClient } from \"./VendiaClient\";\nimport { DataGrid, GridToolbarQuickFilter } from \"@mui/x-data-grid\";\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\nimport Button from '@mui/material/Button';\nimport { filterStateInitializer } from \"@mui/x-data-grid/internals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  client\n} = vendiaClient();\nexport const DevicePage2 = () => {\n  _s();\n  const [testList, setTestList] = useState([]);\n  const [filteredTestList, setFilteredTest] = useState([]);\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    const loadData = async () => {\n      const tempTestList = client.entities.test;\n      setTestList(await tempTestList.list());\n      //console.log(await allTests.list());\n\n      const tempFilteredTestList = await allTests.list({\n        filter: {\n          Device: {\n            contains: 'Device1'\n          }\n        }\n      });\n      setFilteredTest(tempFilteredTestList);\n      //console.log(filteredTestList);\n\n      const tempRows = filteredTestList === null || filteredTestList === void 0 ? void 0 : filteredTestList.items.map(test => ({\n        ID: test._id,\n        TestID: test.TestID,\n        OrgAssignment: test.OrgAssignment,\n        TestName: test.TestName,\n        TestMethod: test.TestMethod,\n        Notes: test.Notes,\n        Completed: removeNull(test.Completed),\n        UpdatedBy: test.UpdatedBy\n      }));\n      setRows(tempRows);\n      console.log(tempRows);\n    };\n    loadData();\n  }, []);\n  const columns = [{\n    field: 'ID',\n    headerName: 'ID',\n    width: 300,\n    editable: false\n  },\n  //{field: 'Device', headerName: 'Device', width: 90, editable: false},\n  {\n    field: 'TestID',\n    headerName: 'TestID',\n    width: 90,\n    editable: false\n  }, {\n    field: 'OrgAssignment',\n    headerName: 'OrgAssignment',\n    width: 150,\n    editable: true\n  }, {\n    field: 'TestName',\n    headerName: 'TestName',\n    width: 90,\n    editable: true\n  }, {\n    field: 'TestMethod',\n    headerName: 'TestMethod',\n    width: 90,\n    editable: true\n  }, {\n    field: 'Notes',\n    headerName: 'Notes',\n    width: 90,\n    editable: true\n  }, {\n    field: 'Completed',\n    headerName: 'Completed',\n    width: 90,\n    editable: true\n  }, {\n    field: 'UpdatedBy',\n    headerName: 'UpdatedBy',\n    width: 90,\n    editable: true\n  }];\n  const removeNull = value => {\n    if (typeof value === 'boolean') return true;else return false;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"DevicePage\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(DevicePage2, \"59GvKrTx+PpInJn2tDH70h0ZjFk=\");\n_c = DevicePage2;\nvar _c;\n$RefreshReg$(_c, \"DevicePage2\");","map":{"version":3,"names":["React","useEffect","useState","vendiaClient","DataGrid","GridToolbarQuickFilter","RemoveCircleIcon","Button","filterStateInitializer","jsxDEV","_jsxDEV","client","DevicePage2","_s","testList","setTestList","filteredTestList","setFilteredTest","rows","setRows","loadData","tempTestList","entities","test","list","tempFilteredTestList","allTests","filter","Device","contains","tempRows","items","map","ID","_id","TestID","OrgAssignment","TestName","TestMethod","Notes","Completed","removeNull","UpdatedBy","console","log","columns","field","headerName","width","editable","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Games/Desktop/Homework/vendia_project/src/DevicePage2.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { vendiaClient } from \"./VendiaClient\";\r\nimport { DataGrid, GridToolbarQuickFilter } from \"@mui/x-data-grid\";\r\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\r\nimport Button from '@mui/material/Button';\r\nimport { filterStateInitializer } from \"@mui/x-data-grid/internals\";\r\n\r\nconst { client } = vendiaClient();\r\n\r\nexport const DevicePage2 = () => {\r\n\r\n    const [testList, setTestList] = useState([]);\r\n    const [filteredTestList, setFilteredTest] = useState([]);\r\n    const [rows, setRows] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            const tempTestList = client.entities.test;\r\n\r\n            setTestList(await tempTestList.list());\r\n            //console.log(await allTests.list());\r\n\r\n            const tempFilteredTestList = await allTests.list({\r\n                filter: {\r\n                  Device: {\r\n                    contains: 'Device1',\r\n                  }\r\n                },\r\n            });\r\n            setFilteredTest(tempFilteredTestList);\r\n            //console.log(filteredTestList);\r\n\r\n\r\n            const tempRows = filteredTestList?.items.map((test) => ({\r\n                ID: test._id,\r\n                TestID: test.TestID,\r\n                OrgAssignment: test.OrgAssignment,\r\n                TestName: test.TestName,\r\n                TestMethod: test.TestMethod,\r\n                Notes: test.Notes,\r\n                Completed: removeNull(test.Completed),\r\n                UpdatedBy: test.UpdatedBy\r\n                \r\n            }));\r\n            setRows(tempRows);\r\n            console.log(tempRows);\r\n\r\n        }\r\n\r\n        loadData();\r\n        \r\n        \r\n    }, []);\r\n\r\n    const columns = [\r\n        {field: 'ID', headerName: 'ID', width: 300, editable: false},\r\n        //{field: 'Device', headerName: 'Device', width: 90, editable: false},\r\n        {field: 'TestID', headerName: 'TestID', width: 90, editable: false},\r\n        {field: 'OrgAssignment', headerName: 'OrgAssignment', width: 150, editable: true,},\r\n        {field: 'TestName', headerName: 'TestName', width: 90, editable: true,},\r\n        {field: 'TestMethod', headerName: 'TestMethod', width: 90, editable: true,},\r\n        {field: 'Notes', headerName: 'Notes', width: 90, editable: true,},\r\n        {field: 'Completed', headerName: 'Completed', width: 90, editable: true,},\r\n        {field: 'UpdatedBy', headerName: 'UpdatedBy', width: 90, editable: true,},\r\n    ];\r\n\r\n    const removeNull = (value) =>\r\n    {\r\n        if(typeof(value) === 'boolean')\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            DevicePage\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,QAAQ,EAAEC,sBAAsB,QAAQ,kBAAkB;AACnE,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,sBAAsB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAM;EAAEC;AAAO,CAAC,GAAGR,YAAY,CAAC,CAAC;AAEjC,OAAO,MAAMS,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,gBAAgB,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZ,MAAMmB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,MAAMC,YAAY,GAAGV,MAAM,CAACW,QAAQ,CAACC,IAAI;MAEzCR,WAAW,CAAC,MAAMM,YAAY,CAACG,IAAI,CAAC,CAAC,CAAC;MACtC;;MAEA,MAAMC,oBAAoB,GAAG,MAAMC,QAAQ,CAACF,IAAI,CAAC;QAC7CG,MAAM,EAAE;UACNC,MAAM,EAAE;YACNC,QAAQ,EAAE;UACZ;QACF;MACJ,CAAC,CAAC;MACFZ,eAAe,CAACQ,oBAAoB,CAAC;MACrC;;MAGA,MAAMK,QAAQ,GAAGd,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEe,KAAK,CAACC,GAAG,CAAET,IAAI,KAAM;QACpDU,EAAE,EAAEV,IAAI,CAACW,GAAG;QACZC,MAAM,EAAEZ,IAAI,CAACY,MAAM;QACnBC,aAAa,EAAEb,IAAI,CAACa,aAAa;QACjCC,QAAQ,EAAEd,IAAI,CAACc,QAAQ;QACvBC,UAAU,EAAEf,IAAI,CAACe,UAAU;QAC3BC,KAAK,EAAEhB,IAAI,CAACgB,KAAK;QACjBC,SAAS,EAAEC,UAAU,CAAClB,IAAI,CAACiB,SAAS,CAAC;QACrCE,SAAS,EAAEnB,IAAI,CAACmB;MAEpB,CAAC,CAAC,CAAC;MACHvB,OAAO,CAACW,QAAQ,CAAC;MACjBa,OAAO,CAACC,GAAG,CAACd,QAAQ,CAAC;IAEzB,CAAC;IAEDV,QAAQ,CAAC,CAAC;EAGd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMyB,OAAO,GAAG,CACZ;IAACC,KAAK,EAAE,IAAI;IAAEC,UAAU,EAAE,IAAI;IAAEC,KAAK,EAAE,GAAG;IAAEC,QAAQ,EAAE;EAAK,CAAC;EAC5D;EACA;IAACH,KAAK,EAAE,QAAQ;IAAEC,UAAU,EAAE,QAAQ;IAAEC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAK,CAAC,EACnE;IAACH,KAAK,EAAE,eAAe;IAAEC,UAAU,EAAE,eAAe;IAAEC,KAAK,EAAE,GAAG;IAAEC,QAAQ,EAAE;EAAK,CAAC,EAClF;IAACH,KAAK,EAAE,UAAU;IAAEC,UAAU,EAAE,UAAU;IAAEC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAK,CAAC,EACvE;IAACH,KAAK,EAAE,YAAY;IAAEC,UAAU,EAAE,YAAY;IAAEC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAK,CAAC,EAC3E;IAACH,KAAK,EAAE,OAAO;IAAEC,UAAU,EAAE,OAAO;IAAEC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAK,CAAC,EACjE;IAACH,KAAK,EAAE,WAAW;IAAEC,UAAU,EAAE,WAAW;IAAEC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAK,CAAC,EACzE;IAACH,KAAK,EAAE,WAAW;IAAEC,UAAU,EAAE,WAAW;IAAEC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAC5E;EAED,MAAMR,UAAU,GAAIS,KAAK,IACzB;IACI,IAAG,OAAOA,KAAM,KAAK,SAAS,EAC1B,OAAO,IAAI,CAAC,KAEZ,OAAO,KAAK;EACpB,CAAC;EAED,oBACIxC,OAAA;IAAAyC,QAAA,EAAK;EAEL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEd,CAAC;AAAA1C,EAAA,CAtEYD,WAAW;AAAA4C,EAAA,GAAX5C,WAAW;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}